require 'selenium-webdriver'
require 'yaml'
browser = Selenium::WebDriver.for :firefox
browser.get "https://www.tumblr.com/login"

file = YAML.load_file('./addressbook.yml')
  file["user"].each do |yml_user|
		browser.find_element(id: 'signup_email').send_keys "#{yml_user["email"]}"
		browser.find_element(id: 'signup_password').send_keys "#{yml_user["password"]}\n"
	end

browser.find_element(class: "icon_post_text").click
browser.find_element(class: "editor-plaintext").send_keys "Hello World!\t"
browser.find_element(class: "editor-richtext").send_keys "This is my text\t #selenium"
browser.find_element(class: "create_post_button").click


verification = browser.find_elements(class: "post_body")
verification.each do |a| 
  if a.text.match /This is my text/
		puts "#{a.text},\nThe post has been successfully made and listed in dashboard!"
		break;
	else
		puts "The post could not be found"
  end
end
# THE BASICS
​
require 'selenium-webdriver'
​
# Open a Browser
browser = Selenium::WebDriver.for :firefox
​
# Navigate
browser.get "http://amazon.co.uk"
browser.navigate.to "http://amazon.com"
​
# LOCATING ELEMENTS ON THE PAGE
​
a = browser.find_element name: "something"
a = browser.find_element id: "someid"
a = browser.find_element css: "h1 .foo" # This is awesome
a = browser.find_element class: "foo"
a = browser.find_element xpath: "//h2[@class='someclass']"
a = browser.find_element tag_name: "tagname"
​
a = browser.find_elements tag_name: "tagname" # Returns an Array of Objects
​
​
# METHODS ON ELEMENTS
​
a.location
a.location_once_scrolled_into_view
a.size
a.displayed?
a.text
a.attribute "class"
a.click
a.send_keys "Eloquent Ruby"
a.submit # Called on any element in a form will submit the form.
a = browser.find_element class: "a-color-price"

#RESULT
puts a.text
puts "The search has succeed"